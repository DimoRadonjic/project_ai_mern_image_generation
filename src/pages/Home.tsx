import { ChangeEventHandler, useEffect, useState } from 'react';

import { Card, FormField, Loader } from '../components';

type Post = {
  _id: number;
  name: string;
  prompt: string;
  photo: string;
};

interface RenderCardsProps {
  data: Array<Post> | null | undefined;
  title: string;
}

const RenderCards = ({ data, title }: RenderCardsProps) => {
  if (data && data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }

  return (
    <h2 className='mt-5 font-bold text-[#6469ff] text-xl uppercase'>{title}</h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState<boolean>(false);
  const [allPosts, setAllPosts] = useState<Array<Post> | null>();

  const [searchText, setSearchText] = useState<string>('');
  const [searchTimeout, setSearchTimeout] = useState<number | undefined>(
    undefined
  );

  const [searchedResults, setSearchedResults] = useState<Array<Post> | null>();

  // const fetchPosts = async () => {
  //   setLoading(true);

  //   try {
  //     const response = await fetch(
  //       'https://dalle-arbb.onrender.com/api/v1/post',
  //       {
  //         method: 'GET',
  //         headers: {
  //           'Content-Type': 'application/json',
  //         },
  //       }
  //     );

  //     if (response.ok) {
  //       const result = await response.json();
  //       setAllPosts(result.data.reverse());
  //     }
  //   } catch (err) {
  //     alert(err);
  //   } finally {
  //     setLoading(false);
  //   }
  // };

  // useEffect(() => {
  //   fetchPosts();
  // }, []);

  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult =
          allPosts &&
          allPosts.filter(
            (item) =>
              item.name.toLowerCase().includes(searchText.toLowerCase()) ||
              item.prompt.toLowerCase().includes(searchText.toLowerCase())
          );
        setSearchedResults(searchResult && searchResult);
      }, 500)
    );
  };

  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>
          The Community Showcase
        </h1>
        <p className='mt-2 text-[#666e75] text-[14px] max-w-[500px]'>
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI
        </p>
      </div>

      <div className='mt-16'>
        <FormField
          labelName='Search posts'
          type='text'
          name='text'
          placeholder='Search something...'
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className='mt-10'>
        {loading ? (
          <div className='flex justify-center items-center'>
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                Showing Resuls for{' '}
                <span className='text-[#222328]'>{searchText}</span>:
              </h2>
            )}
            <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title='No Search Results Found'
                />
              ) : (
                <RenderCards data={allPosts} title='No Posts Yet' />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
